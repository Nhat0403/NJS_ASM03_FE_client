{"ast":null,"code":"var initalState={id_user:'',listCart:[]};var ReducerCart=function ReducerCart(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initalState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){//Nhận dữ liệu id_user và thay đổi state\ncase'ADD_USER':console.log('id_user: ',action.data);state={id_user:action.data,listCart:state.listCart};return state;case'ADD_CART':console.log(state.listCart);//Lấy dữ liệu được truyền tới\nvar data_add_cart=action.data;//Lấy dữ liệu có sẵn trong state\nvar add_cart=state.listCart;if(add_cart.length<1){add_cart.push(data_add_cart);}else{//Tìm Vị Trí của sản phẩm đã mua\nvar indexCart=add_cart.findIndex(function(value){return value.productId._id.toString()===data_add_cart.productId._id.toString();});//Tìm xem thử sản phẩm này đã mua hay chưa\nvar findCart=add_cart.find(function(value){return value.productId._id.toString()===data_add_cart.productId._id.toString();});//Nếu này chưa được mua thì mình push vào\n//Còn đã từng mua rồi thì mình update tại vị trí indexCart mà mình vừa tìm được\nif(!findCart){add_cart.push(data_add_cart);console.log('Push');}else{add_cart[indexCart].quantity=parseInt(add_cart[indexCart].quantity)+parseInt(data_add_cart.quantity);console.log('Update');}}state={id_user:state.id_user,listCart:add_cart};console.log(state.listCart);return state;case'DELETE_CART'://Lấy dữ liệu được truyền tới\nvar data_delete_cart=action.data;//Lấy dữ diệu có sẵn trong state\nvar delete_cart=state.listCart;//Tìm kiểm vị trí mà cần xóa\nvar indexDelete=delete_cart.findIndex(function(value){return value.productId._id.toString()===data_delete_cart.idProduct.toString();});//Xóa theo vị trí\ndelete_cart.splice(indexDelete,1);state={id_user:state.id_user,listCart:delete_cart};return state;case'DELETE_ALL_CART':var data_delete_all_cart=action.data;state={id_user:state.id_user,listCart:data_delete_all_cart};return state;case'UPDATE_CART':var data_update_cart=action.data;var update_cart=state.listCart;console.log(update_cart);console.log(data_update_cart);var index=update_cart.findIndex(function(value){return value.productId._id.toString()===data_update_cart.idProduct.toString();});update_cart[index].quantity=data_update_cart.count;state={id_user:state.id_user,listCart:update_cart};return state;default:return state;}};export default ReducerCart;","map":{"version":3,"sources":["D:/funix/NJS301x_1.0-A_VN Lập trình Web Back-End với NodeJS/assignment 03/Frontend Assignment 03 Client App/src/Redux/Reducer/ReducerCart.jsx"],"names":["initalState","id_user","listCart","ReducerCart","state","action","type","console","log","data","data_add_cart","add_cart","length","push","indexCart","findIndex","value","productId","_id","toString","findCart","find","quantity","parseInt","data_delete_cart","delete_cart","indexDelete","idProduct","splice","data_delete_all_cart","data_update_cart","update_cart","index","count"],"mappings":"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","sourcesContent":["const initalState = {\n\tid_user: '',\n\tlistCart: [],\n};\n\nconst ReducerCart = (state = initalState, action) => {\n\tswitch (action.type) {\n\t\t//Nhận dữ liệu id_user và thay đổi state\n\t\tcase 'ADD_USER':\n\t\t\tconsole.log('id_user: ', action.data);\n\n\t\t\tstate = {\n\t\t\t\tid_user: action.data,\n\t\t\t\tlistCart: state.listCart,\n\t\t\t};\n\n\t\t\treturn state;\n\n\t\tcase 'ADD_CART':\n\t\t\tconsole.log(state.listCart);\n\n\t\t\t//Lấy dữ liệu được truyền tới\n\t\t\tconst data_add_cart = action.data;\n\n\t\t\t//Lấy dữ liệu có sẵn trong state\n\t\t\tconst add_cart = state.listCart;\n\n\t\t\tif (add_cart.length < 1) {\n\t\t\t\tadd_cart.push(data_add_cart);\n\t\t\t} else {\n\t\t\t\t//Tìm Vị Trí của sản phẩm đã mua\n\t\t\t\tconst indexCart = add_cart.findIndex((value) => {\n\t\t\t\t\treturn value.productId._id.toString() === data_add_cart.productId._id.toString();\n\t\t\t\t});\n\n\t\t\t\t//Tìm xem thử sản phẩm này đã mua hay chưa\n\t\t\t\tconst findCart = add_cart.find((value) => {\n\t\t\t\t\treturn value.productId._id.toString() === data_add_cart.productId._id.toString();\n\t\t\t\t});\n\n\t\t\t\t//Nếu này chưa được mua thì mình push vào\n\t\t\t\t//Còn đã từng mua rồi thì mình update tại vị trí indexCart mà mình vừa tìm được\n\t\t\t\tif (!findCart) {\n\t\t\t\t\tadd_cart.push(data_add_cart);\n\t\t\t\t\tconsole.log('Push');\n\t\t\t\t} else {\n\t\t\t\t\tadd_cart[indexCart].quantity =\n\t\t\t\t\t\tparseInt(add_cart[indexCart].quantity) +\n\t\t\t\t\t\tparseInt(data_add_cart.quantity);\n\t\t\t\t\tconsole.log('Update');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate = {\n\t\t\t\tid_user: state.id_user,\n\t\t\t\tlistCart: add_cart,\n\t\t\t};\n\n\t\t\tconsole.log(state.listCart);\n\n\t\t\treturn state;\n\n\t\tcase 'DELETE_CART':\n\t\t\t//Lấy dữ liệu được truyền tới\n\t\t\tconst data_delete_cart = action.data;\n\n\t\t\t//Lấy dữ diệu có sẵn trong state\n\t\t\tconst delete_cart = state.listCart;\n\n\t\t\t//Tìm kiểm vị trí mà cần xóa\n\t\t\tconst indexDelete = delete_cart.findIndex((value) => {\n\t\t\t\treturn value.productId._id.toString() === data_delete_cart.idProduct.toString();\n\t\t\t});\n\n\t\t\t//Xóa theo vị trí\n\t\t\tdelete_cart.splice(indexDelete, 1);\n\n\t\t\tstate = {\n\t\t\t\tid_user: state.id_user,\n\t\t\t\tlistCart: delete_cart,\n\t\t\t};\n\n\t\t\treturn state;\n\n\t\tcase 'DELETE_ALL_CART':\n\t\t\tconst data_delete_all_cart = action.data;\n\n\t\t\tstate = {\n\t\t\t\tid_user: state.id_user,\n\t\t\t\tlistCart: data_delete_all_cart,\n\t\t\t};\n\n\t\t\treturn state;\n\n\t\tcase 'UPDATE_CART':\n\t\t\tconst data_update_cart = action.data;\n\n\t\t\tconst update_cart = state.listCart;\n\t\t\tconsole.log(update_cart);\n\t\t\tconsole.log(data_update_cart);\n\n\t\t\tconst index = update_cart.findIndex((value) => {\n\t\t\t\treturn value.productId._id.toString() === data_update_cart.idProduct.toString()\n\t\t\t});\n\n\t\t\tupdate_cart[index].quantity = data_update_cart.count;\n\n\t\t\tstate = {\n\t\t\t\tid_user: state.id_user,\n\t\t\t\tlistCart: update_cart,\n\t\t\t};\n\n\t\t\treturn state;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default ReducerCart;\n"]},"metadata":{},"sourceType":"module"}